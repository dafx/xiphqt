<!-- This example is for a input playlist that can contain
     FLAC, MP3, and OggVorbis files and a output stream that
     is MP3.  The output stream settings  (bitrate, channels, etc.)
     are controlled by the parameters to lame. (see the encode setting
     for the MP3 format later in this file). -->
<ezstream>
    <url>http://localhost:8000/stream</url>
    <sourcepassword>hackme</sourcepassword>
    <!-- This is what form your output will take. If you are
         reencoding, this is the format to reencode to, if not
         then you need to make sure all your input files are in this
         format.  -->
    <format>MP3</format>
    <filename>tracks.m3u</filename>
    <!-- The following settings are used to describe your stream
         to the server.  It's up to you to make sure the 
         bitrate/quality/samplerate/channels
         match up to your output stream -->
    <svrinfoname>My Stream</svrinfoname>    
    <svrinfourl>http://www.oddsock.org</svrinfourl> 
    <svrinfogenre>RockNRoll</svrinfogenre>
    <svrinfodescription>This is a stream description</svrinfodescription>
    <svrinfobitrate>128</svrinfobitrate>    
    <!-- Quality is only applicable to ogg vorbis streams -->
    <!-- <svrinfoquality>1.0</svrinfoquality> -->
    <svrinfochannels>2</svrinfochannels>
    <svrinfosamplerate>44100</svrinfosamplerate>
    <svrinfopublic>1</svrinfopublic>    
    <reencode>
	<enable>1</enable>
        <!-- Each encdec block specifies a pair of programs used for decoding and
             encoding of the stream.  If reencoding is enabled, then all input files
             must be first decoded before being sent to the encoder.  EZSTREAM uses
             file extensions to match up input files with the appropraite decoder, 
             and uses the <format> setting to match up the output format with the
             appropriate encoder.
        
             Note: It it up to you to set the appropriate bitrate/samplerate/channels
             of the output stream by using command line paramters to the encoders. Use
             the examples defined here as a guide.  All output from decoders should be in
             RAW format, and all input to the encoders should also be in RAW format. -->
        <encdec>
                <!-- Support for THEORA (ffmpeg2theora does both decoding and encoding
                                         so we don't need an encode part) -->
                <format>THEORA</format>
                <match>.avi</match>
                <decode>ffmpeg2theora -x 192 -y 128 -a -1 -v 0 "@T@" -o -</decode>
        </encdec>
        <encdec>
                <!-- Support for THEORA (ffmpeg2theora does both decoding and encoding
                                         so we don't need an encode part) -->
                <format>THEORA</format>
                <match>.mpg</match>
                <decode>ffmpeg2theora -a -1 -v 2 "@T@" -o -</decode>
        </encdec>
	<encdec>
		<!-- Support for FLAC decoding (input files) -->
		<format>FLAC</format>
		<match>.flac</match>
		<decode>flac -s -d --force-raw-format --sign=signed --endian=little "@T@" -o -</decode>
		<encode>Not supported Yet</encode>
	</encdec>
	<encdec>
		<!-- Support for MP3 decoding via madplay, and encoding via LAME -->
		<format>MP3</format>
		<match>.mp3</match>
		<decode>madplay -o raw:- "@T@"</decode>
		<encode>lame -r -x -b 56 -s 44.1 --resample 22.05 -a - -</encode>
	</encdec>
	<encdec>
		<!-- Support for Vorbis decoding via oggdec, and encoding via oggenc -->
		<format>VORBIS</format>
		<match>.ogg</match>
		<decode>oggdec --raw=1 "@T@" -o -</decode>
		<encode>oggenc -Q -r -q 0 --resample=44100 --downmix -t "@M@" -c STREAMER=ezstream -</encode>
	</encdec>
	<!-- New encdec sections can be added for new input/output formats -->
    </reencode>
</ezstream>
