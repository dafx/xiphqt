# -*-Perl-*-

# this module doesn't follow the standard widget hooks.  It shows a
# few things that must be handled explicitly when one isn't mostly
# just calling MGM::Graph->new()

use Tk;

package MGMmodule::hostlogo;

sub module_init{
    my($this,$toplevel,$xpath)=@_;

    my$logo=$this->{"logo"}=
	$toplevel->Pixmap(-file => "$main::libdir/fishframe.xpm");
    my$logoframes=$this->{"logoframes"}=12;
    my$logowidth=$this->{"logowidth"}=$logo->width/12;
    my$logoheight=$this->{"logoheight"}=$logo->height;
    my$hostname=`hostname`;
    chop$hostname;
    $hostname=~s{^([^\.]+).*}{$1};
    $this->{"hostname"}=$hostname;
    
    $toplevel->optionAdd("$xpath.scalewidadj", 5,21);
    $toplevel->optionAdd("$xpath.scalelenadj", 10,21); 
    $toplevel->optionAdd("$xpath*font",             
			 "-*-helvetica-*-r-*-*-10-*-*-*-*-*-*-*",20);
    $toplevel->optionAdd("$xpath*scalerefresh",        80,20);      
    $toplevel->optionAdd("$xpath*order",        0,20);

    # use our font and find the labelsize...
    my$testlabel=$this->{"widget"}->Label(-text=>$hostname,
					 -borderwidth=>0,
					 -padx=>1,-pady=>1);
    
    my$textheight=$this->{"textheight"}=$testlabel->reqheight;
    my$textwidth=$this->{"textwidth"}=$testlabel->reqwidth;
    $testlabel->destroy;

    my$minx=($logowidth>$textwidth?$logowidth:$textwidth);
    my$miny=$logoheight+$textheight;

    $toplevel->optionAdd("$xpath.minx", $minx,21);      
    $toplevel->optionAdd("$xpath.miny", $miny,21);      
    # center the widget      
    $toplevel->optionAdd("$xpath.scalejustify", 0,20);      
    1;
}

sub module_construct{
    my($this,$toplevel,$width,$height)=@_;

    my$logowidth=$this->{"logowidth"};
    my$textwidth=$this->{"textwidth"};
    my$logoheight=$this->{"logoheight"};
    my$textheight=$this->{"textheight"};
    my$logopad=($width-$logowidth)/2;
    my$textpad=($width-$textwidth)/2;
    my$vpad=($height-$logoheight-$textheight)/2;

    my$widget=$toplevel->Frame(Name=>$this->{"name"},
			       borderwidth=>0,
			       highlightthickness=>0,
			       width=>$width,height=>$height);
    $this->{"logowidget"}=$widget->Canvas(borderwidth=>0,
					  highlightthickness=>0,
					  width=>$this->{"logowidth"},
					  height=>$this->{"logoheight"})->
					      place('-x'=>$logopad,
						    '-y'=>$vpad,-anchor=>'nw');
    $this->{"logowidget"}->createImage(0,0,-image=>$this->{"logo"},
				       -anchor=>'ne',-tags=>["logo"]);
    
    $widget->Label(-text=>$this->{"hostname"},
		   -borderwidth=>0,
		   -padx=>1,-pady=>1)->
		       place('-x'=>$textpad,'-y'=>$vpad+$this->{"logoheight"},
			     -anchor=>'nw');
    $this->{"counter"}=0;
    $this->{"widget"}=$widget;
}

sub module_update{
    my($this)=@_;

    my$counter=$this->{"counter"}+1;
    my$logowidth=$this->{"logowidth"};
    if($counter>=$this->{"logoframes"}){$counter=0;}
    my$math=$logowidth*$this->{"logoframes"}-$counter*$logowidth;
    $this->{"logowidget"}->coords('logo',$math,0);
    $this->{"counter"}=$counter;
}

bless {};
