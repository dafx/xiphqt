# -*-Perl-*-
use Tk;

package MGMmodule::loadav;

sub module_init{
    my($this,$toplevel,$xpath)=@_;

    my($minx,$miny)=&MGM::Graph::calcxysize($this,1,' proc(s)',3);

    $toplevel->optionAdd("$xpath*refresh",     1000,21);      
    $toplevel->optionAdd("$xpath*scalethresh", 4,21);      
    $toplevel->optionAdd("$xpath.bar.0.label", "Load average",21);
    $toplevel->optionAdd("$xpath.bar.1.label", "Load (5min)",21);
    $toplevel->optionAdd("$xpath.bar.2.label", "Load (15min)",21);
    $toplevel->optionAdd("$xpath.minx",        $minx,21);      
    $toplevel->optionAdd("$xpath.miny",        $miny,21);      
    $toplevel->optionAdd("$xpath.scalewidadj", 220,21);
    $toplevel->optionAdd("$xpath.scalelenadj", 80,21);      
    1;
}

sub module_name{
    "loadav";
}

sub module_construct{
    my($this,$toplevel,$width,$height)=@_;
    
    $graph=MGM::Graph->new($toplevel,num=>3,
			   width=>$width,height=>$height,prompt=>' proc(s)',
			   name=>$this->module_name); # don't forget name
    
    $widget=$graph->{"widget"};
    $this->{"graph"}=$graph;   # internal data
    $this->{"widget"}=$widget; # must store/return the widget
}

sub module_update{ 
    die "Couldn't open /proc/loadavg\n" unless open(PROC,"</proc/loadavg");
    while(<PROC>){
	if(m/^([0123456789\.]+)\s*([0123456789\.]+)\s*([0123456789\.]+)/){
	    $graph->set($1,$2,$3);
	}
    }
    close PROC;
}

bless {};

