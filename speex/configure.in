dnl Process this file with autoconf to produce a configure script. -*-m4-*-

AC_INIT(libspeex/speex.c)

SPEEX_MAJOR_VERSION=1
SPEEX_MINOR_VERSION=1
SPEEX_MICRO_VERSION=6
SPEEX_EXTRA_VERSION=
#SPEEX_VERSION=1.1.6
SPEEX_VERSION=$SPEEX_MAJOR_VERSION.$SPEEX_MINOR_VERSION.$SPEEX_MICRO_VERSION$SPEEX_EXTRA_VERSION

SPEEX_LT_CURRENT=2
SPEEX_LT_REVISION=0
SPEEX_LT_AGE=1

AC_SUBST(SPEEX_LT_CURRENT)
AC_SUBST(SPEEX_LT_REVISION)
AC_SUBST(SPEEX_LT_AGE)

# For automake.
VERSION=$SPEEX_VERSION
PACKAGE=speex

AC_SUBST(SPEEX_VERSION)

AM_INIT_AUTOMAKE($PACKAGE, $VERSION, no-define)
AM_MAINTAINER_MODE

AC_CANONICAL_HOST
AM_PROG_LIBTOOL

AC_C_BIGENDIAN
AC_C_CONST
AC_C_INLINE

AC_CHECK_HEADERS(sys/soundcard.h sys/audioio.h)

AC_ARG_ENABLE(ogg,
      [  --enable-ogg=[yes/no]     Turn on or off the use of ogg
libraries [default=yes]],
      [case "${enableval}" in
        yes) useogg=true ;;
        no)  useogg=false ;;
        *) AC_MSG_ERROR(bad value ${enableval} for --enable-ogg) ;;
      esac],[useogg=true])

if test x$useogg = xtrue; then
AC_PATH_LIBOGG
fi

if test "$have_libogg" = yes; then
   src=src
else
   src=
fi
AC_SUBST(src)

AC_CHECK_LIB(m, sin)

# Check for getopt_long; if not found, use included source.
AC_CHECK_FUNCS([getopt_long],,
[# FreeBSD has a gnugetopt library.
  AC_CHECK_LIB([gnugetopt],[getopt_long],
[AC_DEFINE([HAVE_GETOPT_LONG])],
[# Use the GNU replacement.
AC_LIBOBJ(getopt)
AC_LIBOBJ(getopt1)])])

AC_CHECK_LIB(winmm, main)

AC_DEFINE_UNQUOTED(SPEEX_VERSION, "${VERSION}")
AC_DEFINE_UNQUOTED(SPEEX_MAJOR_VERSION, ${SPEEX_MAJOR_VERSION})
AC_DEFINE_UNQUOTED(SPEEX_MINOR_VERSION, ${SPEEX_MINOR_VERSION})
AC_DEFINE_UNQUOTED(SPEEX_MICRO_VERSION, ${SPEEX_MICRO_VERSION})
AC_DEFINE_UNQUOTED(SPEEX_EXTRA_VERSION, "${SPEEX_EXTRA_VERSION}")

AC_ARG_ENABLE(valgrind, [  --enable-valgrind       enable valgrind extra checks], [if test "$enableval" = yes; then AC_DEFINE(ENABLE_VALGRIND) fi])

AC_ARG_ENABLE(sse, [  --enable-sse            enable SSE support], [if test "$enableval" = yes; then
AC_DEFINE(_USE_SSE)
CFLAGS="$CFLAGS -O3 -msse"
fi
])

AC_ARG_ENABLE(fixed-point, [  --enable-fixed-point    compile as fixed-point], [if test "$enableval" = yes; then AC_DEFINE(FIXED_POINT) fi])

AC_ARG_ENABLE(arm-asm, [  --enable-arm-asm        make use of ARM assembly instructions], [if test "$enableval" = yes; then AC_DEFINE(ARM_ASM) fi])

AC_ARG_ENABLE(fixed-point-debug, [  --enable-fixed-point-debug  Debug fixed-point implementation], [if test "$enableval" = yes; then AC_DEFINE(FIXED_DEBUG) fi])

AC_ARG_ENABLE(epic-48k, [  --enable-epic-48k       enable support for Epic 4.8 kbps mode], [if test "$enableval" = yes; then AC_DEFINE(EPIC_48K) fi])

AC_ARG_ENABLE(global-pointers, [  --disable-global-pointers  disable use of writable global data], noglobals="yes", noglobals="no")
AM_CONDITIONAL(DISABLE_GLOBAL_POINTERS, [test "x$noglobals" = "xyes"])

dnl Output the makefiles and version.h.

AC_OUTPUT([Makefile libspeex/Makefile src/Makefile doc/Makefile Speex.spec
           include/Makefile include/speex/Makefile speex.pc
           win32/Makefile win32/libspeex/Makefile win32/speexenc/Makefile
           win32/speexdec/Makefile ])

if test "x$src" = "x"; then 
echo "You don't seem to have the development package for libogg (libogg-devel) installed. Only the Speex library (libspeex) will be built (no encoder/decoder executable)"
echo "You can download libogg from http://www.vorbis.com/download.psp"
fi

echo "Type \"make; make install\" to compile and install Speex";
