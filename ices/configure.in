dnl Process this file with autoconf to produce a configure script.
AC_INIT([IceS], 2.0-Beta2, [icecast@xiph.org])
AC_PREREQ(2.52)
AC_CONFIG_SRCDIR(src/ices.c)

AM_INIT_AUTOMAKE(dist-bzip2)
AM_CONFIG_HEADER(config.h)

AC_PROG_CC
AM_PROG_LIBTOOL

dnl Set some options based on environment

dnl openbsd headers break when _XOPEN_SOURCE is defined but without it seems
dnl to be fine
case "$ac_cv_host" in
   *openbsd*)
   ;;
   *) AC_DEFINE(_XOPEN_SOURCE, 500, [Define if you have POSIX and XPG specifications])
   ;;
esac
case $host in 
*-*-irix*)
        DEBUG="-g -signed -D_REENTRANT" 
        XIPH_CFLAGS="-O2 -w -signed -D_REENTRANT"
        PROFILE="-p -g3 -O2 -signed -D_REENTRANT"
;;
*-*-solaris*)
        AC_DEFINE(__EXTENSIONS__, 1, [define to 1 for IPv6 functions on solaris])
        DEBUG="-v -g -D_REENTRANT"
        XIPH_CFLAGS="-xO4 -fast -w -fsimple -native -xcg92 -D_REENTRANT"
        PROFILE="-v -xpg -g -xO4 -fast -native -fsimple -xcg92 -Dsuncc -D_REENTRANT"
;;
*)
        DEBUG="-g -D_REENTRANT"
        XIPH_CFLAGS="-O -D_REENTRANT"
        PROFILE="-g -p -D_REENTRANT" 
;;
esac
if test -n "$GCC"; then
        AC_DEFINE(_GNU_SOURCE, ,[Define if you have POSIX and GNU specifications])
        XIPH_CFLAGS="-ffast-math -fsigned-char"
        DEBUG="-g"
        PROFILE="-g -pg"
fi

dnl Checks for programs.

dnl Checks for libraries.

dnl Checks for header files.
AC_HEADER_STDC

dnl Check for OSS

AC_CHECK_HEADER(sys/soundcard.h, have_oss=yes, have_oss=no)
AC_CHECK_HEADER(machine/soundcard.h, have_oss=yes, )
AM_CONDITIONAL(HAVE_OSS,test "$have_oss" = yes)
if test "$have_oss" = yes; then
    AC_DEFINE(HAVE_OSS,,[Define to enable OSS input module])
fi

dnl Check for Sun audio

AC_ARG_ENABLE(sun-audio,
    AC_HELP_STRING([--enable-sun-audio],
                   [Enable sun audio input (default autodetect)]),
    enable_sun="$enableval",
    enable_sun=yes
)
if test x$enable_sun = xyes; then
   AC_CHECK_HEADER(sys/audioio.h, have_sun_audio=yes, have_sun_audio=no)

   if test "$have_sun_audio" = yes; then
       AC_DEFINE(HAVE_SUN_AUDIO,,[Define to enable sun audio input module])
   fi
fi
AM_CONDITIONAL(HAVE_SUN_AUDIO,test "$have_sun_audio" = yes)

dnl Check for ALSA audio

AC_CHECK_HEADER(alsa/asoundlib.h, have_alsa=yes, have_alsa=no)
AM_CONDITIONAL(HAVE_ALSA,test "$have_alsa" = yes)

if test "$have_alsa" = yes; then
   ALSA_LIBS="-lasound"
   AC_DEFINE(HAVE_ALSA, ,[Define to enable ALSA input module])
fi

dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_CHECK_TYPES([socklen_t],,,[
#include <sys/types.h>
#include <sys/socket.h>
])
AH_BOTTOM([
#ifndef HAVE_SOCKLEN_T
      typedef int socklen_t
#endif
])

dnl needs to be checked early on, so that additional libraries
dnl don't trick the check
ACX_PTHREAD([
     LIBS="$PTHREAD_LIBS $LIBS"
     XIPH_CFLAGS="$XIPH_CFLAGS $PTHREAD_CFLAGS"
     CC="$PTHREAD_CC"
])

dnl Check for types
AC_CHECK_TYPES([uint64_t],,AC_ERROR([could not find a uint64_t type]))

dnl Checks for library functions.

AC_CHECK_LIB(nsl, gethostbyname, LIBS="-lnsl $LIBS",)
AC_CHECK_LIB(socket, socket, LIBS="-lsocket $LIBS",)
AC_CHECK_LIB(rt, nanosleep, LIBS="-lrt $LIBS",)
AC_CHECK_LIB(resolv, res_query, LIBS="-lresolv $LIBS",)

dnl -- configure options --

AC_ARG_WITH(xml-config,
  [  --with-xml-config=PATH  use xml-config in PATH to find libxml ],
  [if ! test -x "$with_xml_config"
   then
     AC_MSG_ERROR([$with_xml_config cannot be executed])
   fi
   XMLCONFIG="$with_xml_config"]
)
if test -z "$XMLCONFIG"
then
  AC_CHECK_PROGS(XMLCONFIG, [xml2-config xml-config])
fi
if test -n "$XMLCONFIG"
then
  XML_LIBS="`$XMLCONFIG --libs`"
  XML_CFLAGS="`$XMLCONFIG --cflags`"
  LIBS="$XML_LIBS $LIBS"
  XIPH_CFLAGS="$XIPH_CFLAGS $XML_CFLAGS"
  AC_CHECK_FUNC(xmlParseFile,, [AC_MSG_ERROR([There was a problem linking with libxml])])
else
  AC_MSG_ERROR([xml-config could not be found])
fi

AM_PATH_OGG(, AC_MSG_ERROR(must have Ogg installed!))
LIBS="$OGG_LIBS $LIBS"
XIPH_CFLAGS="$XIPH_CFLAGS $OGG_CFLAGS"

AM_PATH_VORBIS(, AC_MSG_ERROR(must have Vorbis installed!))
LIBS="$VORBIS_LIBS $VORBISENC_LIBS $LIBS"
XIPH_CFLAGS="$XIPH_CFLAGS $VORBIS_CFLAGS $VORBISENC_CFLAGS"

dnl we expect thread support in libshout
save_CFLAGS=$CFLAGS
CFLAGS="$CFLAGS $PTHREAD_CFLAGS"
AM_PATH_SHOUT(, AC_MSG_ERROR(must have libshout installed!))
LIBS="$SHOUT_LIBS $LIBS"
XIPH_CFLAGS="$XIPH_CFLAGS $SHOUT_CFLAGS"
CFLAGS=$save_CFLAGS

dnl Make substitutions

AC_SUBST(ICES_EXTRA_OBJS)
AC_SUBST(ALSA_LIBS)
AC_SUBST(XML_LIBS)
AC_SUBST(SHOUT_LIBS)
AC_SUBST(OGG_CFLAGS)
AC_SUBST(VORBIS_CFLAGS)
AC_SUBST(SHOUT_CLFAGS)
AC_SUBST(XML_CFLAGS)
AC_SUBST(LIBTOOL_DEPS)
AC_SUBST(OPT)
AC_SUBST(LIBS)
AC_SUBST(DEBUG)
AC_SUBST(PROFILE)
AC_SUBST(XIPH_CFLAGS)
AC_SUBST(PTHREAD_CFLAGS)

AC_OUTPUT(Makefile conf/Makefile src/Makefile src/avl/Makefile src/thread/Makefile src/net/Makefile src/log/Makefile src/timing/Makefile)
