/********************************************************************
 *                                                                  *
 * THIS FILE IS PART OF THE OggVorbis SOFTWARE CODEC SOURCE CODE.   *
 * USE, DISTRIBUTION AND REPRODUCTION OF THIS SOURCE IS GOVERNED BY *
 * THE GNU LESSER/LIBRARY PUBLIC LICENSE, WHICH IS INCLUDED WITH    *
 * THIS SOURCE. PLEASE READ THESE TERMS BEFORE DISTRIBUTING.        *
 *                                                                  *
 * THE OggVorbis SOURCE CODE IS (C) COPYRIGHT 1994-2001             *
 * by the XIPHOPHORUS Company, http://www.xiph.org/                 *
 *                                                                  *
 ********************************************************************

 function: static codebook autogenerated by vq/somethingorother

 ********************************************************************/

#ifndef _V_res0_128_128_4_VQH_
#define _V_res0_128_128_4_VQH_
#include "codebook.h"

static long _vq_quantlist_res0_128_128_4[] = {
	2,
	1,
	3,
	0,
	4,
};

static long _vq_lengthlist_res0_128_128_4[] = {
	 2, 5, 5, 7, 7, 0, 5, 5, 8, 7, 0, 5, 5, 8, 7, 0,
	 0, 0, 9, 9, 0, 0, 0, 9, 9, 5, 6, 7, 8, 9, 0, 8,
	 8, 9, 9, 0, 8, 8,10, 9, 0, 0, 0,11,11, 0, 0, 0,
	11,12, 4, 7, 6, 9, 8, 0, 8, 8,10, 9, 0, 8, 8, 9,
	 9, 0, 0, 0,11,11, 0, 0, 0,13,12, 8, 9, 9,10,12,
	 0,10,11,12, 0, 0,10,12,13,12, 0, 0, 0, 0, 0, 0,
	 0, 0, 0,15, 7, 9, 9,12,10, 0,11,11,13,13, 0,12,
	10,15,12, 0, 0, 0,15, 0, 0, 0, 0,15, 0, 0, 0, 0,
	 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	 0, 0, 0, 0, 0, 0, 5, 8, 8,10,10, 0, 9, 9,10,10,
	 0, 9, 9,11,10, 0, 0, 0,12,13, 0, 0, 0,12,11, 5,
	 8, 8,11,10, 0, 9, 9,10,10, 0, 9, 9,10,10, 0, 0,
	 0,12,12, 0, 0, 0,11,11, 7, 9, 9,12,15, 0,10,10,
	13,13, 0,10,11,12,13, 0, 0, 0,14, 0, 0, 0, 0, 0,
	 0, 8, 9, 9,12,12, 0,10,10,12,13, 0,10,10,14,12,
	 0, 0, 0, 0,15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	 0, 0, 0, 5, 8, 8,10,11, 0, 8, 9,10,10, 0, 8, 9,
	10,11, 0, 0, 0,11,12, 0, 0, 0,11,12, 5, 8, 8,10,
	10, 0, 9, 9,10,10, 0, 8, 8,10,11, 0, 0, 0,12,11,
	 0, 0, 0,11,12, 8, 9,10,13,14, 0,10,10,15,13, 0,
	11,11,13,15, 0, 0, 0,13, 0, 0, 0, 0, 0,15, 8,10,
	 9,15,13, 0,11,11,13, 0, 0,10,11,12,13, 0, 0, 0,
	 0,15, 0, 0, 0,15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	 0, 0, 9,12,11,14,15, 0,12,13, 0,15, 0,11,13, 0,
	 0, 0, 0, 0, 0, 0, 0, 0, 0,15, 0, 9,11,11, 0,15,
	 0,11,12,15,15, 0,12,11, 0, 0, 0, 0, 0, 0, 0, 0,
	 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9,
	12,11,15, 0, 0,12,13, 0, 0, 0,13,11,15, 0, 0, 0,
	 0, 0, 0, 0, 0, 0, 0, 0, 9,11,12, 0,15, 0,12,11,
	13,15, 0,13,12, 0, 0, 0, 0, 0,15, 0, 0, 0, 0, 0,
	15,
};

static float _vq_quantthresh_res0_128_128_4[] = {
	-1.5, -0.5, 0.5, 1.5, 
};

static long _vq_quantmap_res0_128_128_4[] = {
	    3,    1,    0,    2,    4,
};

static encode_aux_threshmatch _vq_auxt_res0_128_128_4 = {
	_vq_quantthresh_res0_128_128_4,
	_vq_quantmap_res0_128_128_4,
	5,
	5
};

static long _vq_pigeonmap_res0_128_128_4[] = {
	    1,     0,     0,     0, 
};

static long _vq_fitlist_res0_128_128_4[] = {
	    0,     1,     2,     3,     6,     7,     8,    11, 
	   12,    13,    18,    25,    26,    27,    28,    31, 
	   32,    33,    36,    37,    38,    43,    50,    51, 
	   52,    53,    56,    57,    58,    61,    62,    63, 
	   68,    75,    76,    77,    78,    81,    82,    83, 
	   86,    87,    88,   150,   151,   152,   153,   156, 
	  157,   158,   161,   162,   163,   168,   175,   176, 
	  177,   178,   181,   182,   183,   186,   187,   188, 
	  193,   200,   201,   202,   203,   206,   207,   208, 
	  211,   212,   213,   218,   275,   276,   277,   278, 
	  281,   282,   283,   286,   287,   288,   293,   300, 
	  301,   302,   303,   306,   307,   308,   311,   325, 
	  326,   327,   328,   331,   332,   333,   336,   450, 
	  451,   452,   453,   456,   457,   461,     4,     9, 
	   14,    19,    29,    34,    39,    44,    54,    59, 
	   64,    69,    79,    89,   154,   159,   164,   169, 
	  179,   184,   189,   194,   204,   209,   214,   279, 
	  284,   289,   294,   304,   309,   312,   329,   334, 
	  337,   454,   459,   462,   314,   319,   339,    23, 
	   48,    73,   173,   198,   298,   313,   338,    24, 
	   49,    74,    99,   174,   199,   299,   324,   349, 
	  323,   473,   100,   101,   102,   103,   106,   107, 
	  108,   111,   112,   113,   118,   225,   226,   227, 
	  228,   231,   232,   233,   236,   237,   238,   318, 
	  350,   351,   352,   353,   356,   357,   358,   361, 
	  475,   476,   477,   481,   482,   483,   486,   104, 
	  109,   114,   229,   234,   239,   244,   354,   362, 
	  479,   484,   487,   364,   369,   123,   363,   373, 
	  343,   575,   576,   577,   578,   581,   582,   586, 
	  587,   588,   600,   601,   602,   606,   607,   608, 
	  611,   604,   609,   612,   624,   618, 
};

static long _vq_fitmap_res0_128_128_4[] = {
	    0,     0,     0,     0,     0,     0,     0,     0, 
	    0,     0,     0,     0,     0,     0,     0,     0, 
};

static long _vq_fitlength_res0_128_128_4[] = {
	  246,   246,   246,   246,   246,   246,   246,   246, 
	  246,   246,   246,   246,   246,   246,   246,   246, 
};

static encode_aux_pigeonhole _vq_auxp_res0_128_128_4 = {
	-2, 1, 4, 2,
	_vq_pigeonmap_res0_128_128_4,
	246,
	_vq_fitlist_res0_128_128_4,
	_vq_fitmap_res0_128_128_4,
	_vq_fitlength_res0_128_128_4
};

static static_codebook _vq_book_res0_128_128_4 = {
	4, 625,
	_vq_lengthlist_res0_128_128_4,
	1, -533725184, 1611661312, 3, 0,
	_vq_quantlist_res0_128_128_4,
	NULL,
	&_vq_auxt_res0_128_128_4,
	&_vq_auxp_res0_128_128_4,
	0
};


#endif
