/********************************************************************
 *                                                                  *
 * THIS FILE IS PART OF THE OggVorbis SOFTWARE CODEC SOURCE CODE.   *
 * USE, DISTRIBUTION AND REPRODUCTION OF THIS SOURCE IS GOVERNED BY *
 * THE GNU LESSER/LIBRARY PUBLIC LICENSE, WHICH IS INCLUDED WITH    *
 * THIS SOURCE. PLEASE READ THESE TERMS BEFORE DISTRIBUTING.        *
 *                                                                  *
 * THE OggVorbis SOURCE CODE IS (C) COPYRIGHT 1994-2001             *
 * by the XIPHOPHORUS Company, http://www.xiph.org/                 *
 *                                                                  *
 ********************************************************************

 function: static codebook autogenerated by vq/somethingorother

 ********************************************************************/

#ifndef _V_res0_128_1024_4_VQH_
#define _V_res0_128_1024_4_VQH_
#include "codebook.h"

static long _vq_quantlist_res0_128_1024_4[] = {
	2,
	1,
	3,
	0,
	4,
};

static long _vq_lengthlist_res0_128_1024_4[] = {
	 1, 7, 6, 0,13, 0, 5, 5,10,10, 0, 5, 5,10,10, 0,
	 6, 6, 8, 8, 0, 0, 0,10, 9, 7,11,11,12, 0, 0,11,
	10,13, 0, 0, 9,11,13, 0, 0,13, 9, 0, 0, 0, 0, 0,
	11, 0, 7,10,12,11, 0, 0, 9,13,12, 0, 0,11,11,12,
	10, 0, 9,11,13,13, 0, 0, 0, 0,11,11, 0, 0, 0, 0,
	 0, 0,13, 0, 0, 0, 0, 0,13, 0, 0, 0, 0, 0,13, 0,
	 0, 0,12, 0, 0,12,12, 0,13, 0, 0, 0, 0, 0, 0, 0,
	11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	 0, 0, 0, 0, 0, 0, 5,10,11, 0, 0, 0, 9, 8,12,11,
	 0,11,12,11,12, 0,10, 8,11,10, 0, 0, 0,10, 0, 5,
	10, 9, 0,13, 0, 8, 9, 0,12, 0,11, 9, 0, 9, 0, 9,
	11, 0,11, 0, 0, 0, 0,11,10, 0, 0, 0, 0, 0, 0,12,
	 0, 0, 0,12, 0, 0, 0, 0, 0,12, 0, 0, 0, 0, 0, 0,
	 0,10, 0,11, 0, 0, 0, 0,11, 0, 0, 0, 0,11, 0,12,
	 0,12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	 0, 0, 0, 5,11, 9, 0,12, 0,11,10,12,12, 0, 9, 9,
	 0,11, 0,11, 9,12, 0, 0, 0, 0,11, 0, 5,10,10,11,
	 0, 0, 9,10,11, 0, 0,10,10,11, 0, 0, 9,10,11,12,
	 0, 0, 0,12,11, 9,11,10, 0, 0, 0, 0,10, 0, 0, 0,
	10,11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,12, 0,10,10,
	 0, 0, 0, 0,11, 0, 0, 0, 0, 0,11, 0, 0, 0,11, 0,
	 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	 6, 8,11, 0, 0, 0, 9,11, 0, 0, 0, 8,10,12, 0, 0,
	 0, 0, 0, 0, 0, 0, 0, 0, 0, 6,11, 9, 0, 0, 0,11,
	 8, 0, 0, 0,10, 9, 0,12, 0, 0, 0, 0, 0, 0, 0, 0,
	 0, 0, 8,12, 0, 0, 0, 0, 0,11, 0, 0, 0,12, 0, 0,
	 0, 0,12,12, 0,11, 0, 0, 0, 0, 0, 8,12, 0, 0, 0,
	 0,11,10, 0, 0, 0, 0,11, 0, 0, 0, 0,12,12, 0, 0,
	 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9,
	 0,11, 0, 0, 0, 0,11, 0, 0, 0,12, 0, 0, 0, 0, 0,
	 0, 0, 0, 0, 0, 0, 0, 0, 9,11, 0, 0, 0, 0,11, 0,
	 0, 0, 0,11,12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	 0,
};

static float _vq_quantthresh_res0_128_1024_4[] = {
	-1.5, -0.5, 0.5, 1.5, 
};

static long _vq_quantmap_res0_128_1024_4[] = {
	    3,    1,    0,    2,    4,
};

static encode_aux_threshmatch _vq_auxt_res0_128_1024_4 = {
	_vq_quantthresh_res0_128_1024_4,
	_vq_quantmap_res0_128_1024_4,
	5,
	5
};

static long _vq_pigeonmap_res0_128_1024_4[] = {
	    1,     0,     0,     0, 
};

static long _vq_fitlist_res0_128_1024_4[] = {
	    0,     1,     2,     6,     7,     8,    11,    12, 
	   13,    16,    17,    18,    25,    26,    27,    28, 
	   31,    32,    33,    36,    37,    38,    41,    42, 
	   50,    51,    52,    53,    56,    57,    58,    61, 
	   62,    63,    66,    67,    68,    75,    82,    88, 
	  150,   151,   152,   156,   157,   158,   161,   162, 
	  163,   166,   167,   168,   175,   176,   177,   181, 
	  182,   186,   187,   191,   192,   200,   207,   211, 
	  217,   275,   276,   277,   281,   282,   283,   286, 
	  287,   291,   292,   293,   300,   301,   302,   303, 
	  306,   307,   308,   311,   316,   325,   326,   327, 
	  332,   336,   400,   401,   402,   406,   407,   411, 
	  412,   413,   425,   426,   427,   431,   432,   436, 
	  450,   451,   457,   461,   466,     4,     9,    14, 
	   19,    64,    69,    94,   159,   164,   169,   179, 
	  184,   189,   194,   279,   284,   289,   312,   317, 
	  337,   437,   467,   319,   439,   469,    23,    48, 
	   98,   173,   298,   313,    24,    74,   199,   324, 
	  323,   348,   101,   102,   112,   225,   227,   232, 
	  237,   241,   318,   350,   351,   356,   366,   475, 
	  476,   481,   482,   104,   239,   362,   487,   492, 
	  493,   575,   577,   582,   586,   600,   601,   606, 
	  611,   612, 
};

static long _vq_fitmap_res0_128_1024_4[] = {
	    0,     0,     0,     0,     0,     0,     0,     0, 
	    0,     0,     0,     0,     0,     0,     0,     0, 
};

static long _vq_fitlength_res0_128_1024_4[] = {
	  178,   178,   178,   178,   178,   178,   178,   178, 
	  178,   178,   178,   178,   178,   178,   178,   178, 
};

static encode_aux_pigeonhole _vq_auxp_res0_128_1024_4 = {
	-2, 1, 4, 2,
	_vq_pigeonmap_res0_128_1024_4,
	178,
	_vq_fitlist_res0_128_1024_4,
	_vq_fitmap_res0_128_1024_4,
	_vq_fitlength_res0_128_1024_4
};

static static_codebook _vq_book_res0_128_1024_4 = {
	4, 625,
	_vq_lengthlist_res0_128_1024_4,
	1, -533725184, 1611661312, 3, 0,
	_vq_quantlist_res0_128_1024_4,
	NULL,
	&_vq_auxt_res0_128_1024_4,
	&_vq_auxp_res0_128_1024_4,
	0
};


#endif
