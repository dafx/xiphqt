/********************************************************************
 *                                                                  *
 * THIS FILE IS PART OF THE Ogg Vorbis SOFTWARE CODEC SOURCE CODE.  *
 * USE, DISTRIBUTION AND REPRODUCTION OF THIS SOURCE IS GOVERNED BY *
 * THE GNU PUBLIC LICENSE 2, WHICH IS INCLUDED WITH THIS SOURCE.    *
 * PLEASE READ THESE TERMS DISTRIBUTING.                            *
 *                                                                  *
 * THE OggSQUISH SOURCE CODE IS (C) COPYRIGHT 1994-1999             *
 * by 1999 Monty <monty@xiph.org> and The XIPHOPHORUS Company       *
 * http://www.xiph.org/                                             *
 *                                                                  *
 ********************************************************************

 function: static codebook autogenerated by vq/somethingorother

 ********************************************************************/

#ifndef _V_res0_100_1024c_6b_VQH_
#define _V_res0_100_1024c_6b_VQH_
#include "vorbis/codebook.h"

static long _vq_quantlist_res0_100_1024c_6b[] = {
	0,
	5,
	10,
	14,
	17,
	20,
	22,
	24,
	26,
	27,
	28,
	29,
	30,
	31,
	32,
	33,
	34,
	36,
	38,
	40,
	43,
	46,
	50,
	55,
	60,
};

static long _vq_lengthlist_res0_100_1024c_6b[] = {
	 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,17, 0, 0, 0,
	 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,14, 0,
	 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	 0, 0, 0, 0, 0, 0,11, 0, 0,14, 0, 0, 0, 0, 0, 0,
	 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 0, 0, 0,
	 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,10, 0,
	 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	 0, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0,
	 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,16,13,
	 0, 0, 0, 5, 0, 0, 0, 3, 2, 3, 0, 0, 0, 5, 0, 0,
	 0, 0, 0,15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4,
	 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0,
	 0,10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0,
	 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	 0, 0, 0, 0, 0,11, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0,
	 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	 0, 0, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0,
	 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	 0, 0, 0, 0,13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0,
	 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,17, 0, 0, 0, 0,
	 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,14, 0, 0, 0, 0,
	 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	 0,
};

static double _vq_quantthresh_res0_100_1024c_6b[] = {
	-28, -23, -18, -14.5, -11.5, -9, -7, -5, 
	-3.5, -2.5, -1.5, -0.5, 0.5, 1.5, 2.5, 3.5, 
	5, 7, 9, 11.5, 14.5, 18, 23, 28, 
};

static long _vq_quantmap_res0_100_1024c_6b[] = {
	    0,    1,    2,    3,    4,    5,    6,    7,
	    8,    9,   10,   11,   12,   13,   14,   15,
	   16,   17,   18,   19,   20,   21,   22,   23,
	   24,
};

static encode_aux_threshmatch _vq_auxt_res0_100_1024c_6b = {
	_vq_quantthresh_res0_100_1024c_6b,
	_vq_quantmap_res0_100_1024c_6b,
	25,
	25
};

static long _vq_ptr0_res0_100_1024c_6b[] = {
	    -1,    -2,    -3,    -4,    12,    62,    -7,    -8,
	    -9,   112,   166,   -12,   -13,   166,   183,   -16,
	   166,   -18,   213,   241,   183,   -22,   286,   312,
	   -25,   -26,   -27,   -28,   183,   286,    62,   -32,
	   206,   -34,   307,   382,    12,   -38,   302,   303,
	   405,   -42,   -43,   -44,   -45,   286,   311,   -48,
	   312,   313,   -51,   -52,   286,   307,   -55,   -56,
	   335,   382,   -59,   -60,   -61,   -62,   166,   169,
	   -65,   241,   313,    12,   -69,   169,   323,   -72,
	   -73,   -74,   317,   369,   440,   -78,   323,   369,
	   468,   -82,   -83,   363,   410,   -86,   440,   -88,
	   468,   -90,   487,   507,
};

static long _vq_ptr1_res0_100_1024c_6b[] = {
	   -58,   -24,   -11,    -6,    -5,   169,   206,   169,
	   -10,   187,   187,   -20,   -15,   -14,   187,   -17,
	   241,   -19,   313,   313,   -21,   -23,   313,   313,
	   -41,   -36,   -30,   -29,   307,   307,   -31,   -33,
	   405,   -35,   405,   405,   -37,   -39,   507,   -40,
	   507,   -50,   -47,   363,   -46,   335,   335,   -49,
	   363,   363,   -54,   -53,   335,   335,   507,   -57,
	   410,   410,   -71,   -67,   -64,   -63,   241,   241,
	   -66,   317,   317,   -68,   -70,   369,   369,   -81,
	   -77,   -75,   440,   -76,   468,   -79,   369,   -80,
	   587,   -85,   -84,   440,   440,   -87,   468,   -89,
	   587,   -91,   587,   587,
};

static long _vq_p_res0_100_1024c_6b[] = {
	   412,   374,   224,   124,    24,   124,   224,   332,
	   224,   224,   332,   426,   374,   332,   366,   332,
	   332,   426,   426,   482,   366,   572,   572,   624,
	   412,   412,   366,   366,   366,   572,   124,   412,
	   412,   614,   614,   764,    24,   604,   604,   606,
	   810,   726,   622,   670,   572,   572,   622,   624,
	   624,   626,   614,   572,   572,   614,   764,   670,
	   670,   764,   626,   634,   338,   332,   332,   338,
	   482,   482,   626,    24,   338,   338,   646,   634,
	   634,   634,   634,   738,   880,   646,   646,   738,
	   936,   820,   726,   726,   820,   880,   880,   936,
	   936,   974,   974,  1014,
};

static long _vq_q_res0_100_1024c_6b[] = {
	   936,   614,   366,   224,   124,   338,   412,   338,
	   332,   374,   374,   572,   426,   374,   374,   426,
	   482,   482,   626,   626,   572,   624,   626,   626,
	   626,   606,   412,   572,   614,   614,   412,   614,
	   810,   764,   810,   810,   604,   606,  1014,   810,
	  1014,   820,   624,   726,   622,   670,   670,   626,
	   726,   726,   764,   614,   670,   670,  1014,   764,
	   820,   820,   726,   738,   634,   338,   482,   482,
	   626,   634,   634,   338,   646,   738,   738,   726,
	   646,   738,   880,   936,   936,   936,   738,   936,
	  1174,   974,   820,   880,   880,   974,   936,   974,
	  1174,  1014,  1174,  1174,
};

static encode_aux_nearestmatch _vq_auxn_res0_100_1024c_6b = {
	_vq_ptr0_res0_100_1024c_6b,
	_vq_ptr1_res0_100_1024c_6b,
	_vq_p_res0_100_1024c_6b,
	_vq_q_res0_100_1024c_6b,
	92, 92
};

static static_codebook _vq_book_res0_100_1024c_6b = {
	2, 625,
	_vq_lengthlist_res0_100_1024c_6b,
	1, -526516224, 1611661312, 6, 0,
	_vq_quantlist_res0_100_1024c_6b,
	&_vq_auxn_res0_100_1024c_6b,
	&_vq_auxt_res0_100_1024c_6b,
};


#endif
