Positron TODO List

Bugs
----



Features
--------

* Proper detection of valid music file attributes (title, genre, time,
etc) in MP3 and Ogg Vorbis files.


Spec Questions
--------------

(In reference to "WOID DB specification.doc")

* What is the "bag delimiter" (pg. 8) used for?

* What is the format for display data (pg. 7)?  It appears to be just
an ASCII string in the actual databases I've looked at.  However, the
special handling (prefixing the string with its size) makes me think
that what I'm seeing is just a special case and I might see more
complicated data structures there in the future.

* At the bottom of page 7, "Access Keys" states that each key entry is
16 bits (presumably a record number).  In actual databases, however,
I'm seeing a 32 bit number that looks like a pointer directly to the
start of the record in the child database.  Is this the correct way to
interpret the field?

* Where is the escaper character used?  Is it only in the Primary Data
field?  In the Extra Fields?  Should I not look for it when reading
fixed width fields (like the access keys or the time and size extra
fields)?

* The definition of the "Size" extra key (pg. 12) states that it is
the size in bytes, whereas in actual databases, it appears to be in
kilobytes.

* Is the meaning of the "Recordings" field (pg. 12) the name of the
source of recording?  In practice, it appears to be either "FM Radio"
or "Microphone".


USB Issues
----------

(Note that it is not clear where the best place for the solution of
these problems is (the firmware vs. the operating system), but they
are definitely not solvable in positron.)

* The Neuros does not responding to the "Mode Sense" command defined 
in the USB Mass Storage Class standard.

When the host computer sends a Mode Sense command to the Neuros, the
request is ignored, or fails in some other way.  I see direct evidence
of this in the USB debugging messages in Linux.

Different operating systems appear to deal with this failure in
different ways.  Linux (and I presume Windows) just assumes the device
is read-write.  Darwin (and therefore OS X) assumes the device is
read-only.  The result is that it is impossible to update the database
on OS X because the Neuros cannot be written to.  Because Linux and
Windows assume the device is read-write, there is no problem there.

The only OS this will cause a problem for is Mac OS X.  Unfortunately,
the workaround requires a trivial patch to the USB Mass Storage
component of Darwin, which I doubt many OS X users would be willing to
install.  (It might be possible to deliver the update through a friendly
installer, but I don't know about all the issues and pitfalls with
updating core OS components in OS X.)

* Unmounting on OS X causes the Finder to go into an infinite loop.

My best guess, (again, watching USB debug messages in Linux) is this
is because the Neuros also does not respond to a USB Mass Storage
command, which Linux can deal with, but OS X chokes on.