#############################################################################
# Makefile for building mask
# Generated by tmake at 20:21, 2001/01/04
#     Project: mask
#    Template: app
#############################################################################

####### Compiler, tools and options

CC	=	gcc
CXX	=	g++
CFLAGS	=	-pipe -Wall -W -g
CXXFLAGS=	-pipe -Wall -W -g
INCPATH	=	-I$(QTDIR)/include
LINK	=	g++
LFLAGS	=	
LIBS	=	$(SUBLIBS) -L$(QTDIR)/lib -L/usr/X11R6/lib -lao -ldl -lqt -lXext -lX11 -lm
MOC	=	$(QTDIR)/bin/moc
UIC	=	

TAR	=	tar -cf
GZIP	=	gzip -9f

####### Files

HEADERS =	testwindow.h \
		graph.h \
		data.h \
		audio.h \
		arrays.h
SOURCES =	main.cpp \
		testwindow.cpp \
		graph.cpp \
		data.cpp \
		audio.cpp
OBJECTS =	main.o \
		testwindow.o \
		graph.o \
		data.o \
		audio.o
INTERFACES =	
UICDECLS =	
UICIMPLS =	
SRCMOC	=	moc_testwindow.cpp \
		moc_graph.cpp
OBJMOC	=	moc_testwindow.o \
		moc_graph.o
DIST	=	
TARGET	=	mask

####### Implicit rules

.SUFFIXES: .cpp .cxx .cc .C .c

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules


all: $(TARGET)

$(TARGET): $(UICDECLS) $(OBJECTS) $(OBJMOC) 
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJMOC) $(LIBS)

moc: $(SRCMOC)

tmake: Makefile

Makefile: mask.pro
	tmake mask.pro -o Makefile

dist:
	$(TAR) mask.tar mask.pro $(SOURCES) $(HEADERS) $(INTERFACES) $(DIST)
	$(GZIP) mask.tar

clean:
	-rm -f $(OBJECTS) $(OBJMOC) $(SRCMOC) $(UICIMPLS) $(UICDECLS) $(TARGET)
	-rm -f *~ core

####### Sub-libraries


###### Combined headers


####### Compile

main.o: main.cpp \
		testwindow.h \
		data.h \
		audio.h \
		arrays.h \
		graph.h

testwindow.o: testwindow.cpp \
		testwindow.h \
		data.h \
		audio.h \
		arrays.h \
		graph.h

graph.o: graph.cpp \
		graph.h \
		data.h \
		audio.h \
		arrays.h

data.o: data.cpp \
		data.h \
		audio.h \
		arrays.h

audio.o: audio.cpp \
		audio.h \
		arrays.h

moc_testwindow.o: moc_testwindow.cpp \
		testwindow.h \
		data.h \
		audio.h \
		arrays.h \
		graph.h

moc_graph.o: moc_graph.cpp \
		graph.h \
		data.h \
		audio.h \
		arrays.h

moc_testwindow.cpp: testwindow.h
	$(MOC) testwindow.h -o moc_testwindow.cpp

moc_graph.cpp: graph.h
	$(MOC) graph.h -o moc_graph.cpp

